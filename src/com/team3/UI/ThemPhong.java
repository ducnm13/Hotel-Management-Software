/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.team3.UI;

import com.team3.DAO.DAO_LoaiPhong;
import com.team3.DAO.DAO_Phong;
import com.team3.Helpers.DialogHelper;
import com.team3.Model.Model_LoaiPhong;
import com.team3.Model.Model_Phong;
import com.team3.UI.JPanel.SoDoPhong;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Dell Vostro
 */
public class ThemPhong extends javax.swing.JDialog {
    DAO_Phong pDAO = new DAO_Phong();
    DAO_LoaiPhong lpdao = new DAO_LoaiPhong();
    static int xx, yy;
    
    /**
     * Creates new form PhieuDangKy
     */
    public ThemPhong(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.loadTang();
        this.loadLoaiPhong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblClose = new javax.swing.JLabel();
        lblIconApp = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblIconApp1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboLoaiPhong = new javax.swing.JComboBox<>();
        cboTang = new javax.swing.JComboBox<>();
        txtTenPhong = new javax.swing.JTextField();
        chkMultiRoom = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        txtStartPoint = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        txtEndPoint = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnBack = new javax.swing.JButton();
        btnThemTang = new javax.swing.JButton();
        btnCapnhat = new javax.swing.JButton();
        lblSoHieu = new javax.swing.JLabel();

        jMenuItem1.setText("Xem/Sửa Phiếu");
        jPopupMenu1.add(jMenuItem1);
        jPopupMenu1.add(jSeparator1);

        jMenuItem2.setText("Thoát");
        jPopupMenu1.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(48, 55, 79));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/team3/Images/icons/close.png"))); // NOI18N
        lblClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCloseMousePressed(evt);
            }
        });
        jPanel2.add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 30, 30));

        lblIconApp.setBackground(new java.awt.Color(153, 255, 102));
        lblIconApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconApp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(lblIconApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Thêm phòng vào hệ thống");
        jPanel2.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 270, 30));

        lblIconApp1.setBackground(new java.awt.Color(153, 255, 102));
        lblIconApp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconApp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/team3/Images/icons/iconApp.png"))); // NOI18N
        lblIconApp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(lblIconApp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 370, 30);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setComponentPopupMenu(jPopupMenu1);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Số hiệu phòng");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Loại phòng");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Tầng");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        cboLoaiPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(cboLoaiPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 330, 30));

        cboTang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboTang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cboTang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTangItemStateChanged(evt);
            }
        });
        cboTang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboTangMouseClicked(evt);
            }
        });
        cboTang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTangActionPerformed(evt);
            }
        });
        cboTang.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboTangPropertyChange(evt);
            }
        });
        jPanel3.add(cboTang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 330, 30));

        txtTenPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenPhong.setText("01");
        jPanel3.add(txtTenPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 280, -1));

        chkMultiRoom.setBackground(new java.awt.Color(255, 255, 255));
        chkMultiRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkMultiRoom.setText("Thêm nhiều phòng (Auto Skip Phòng Đã Có)");
        chkMultiRoom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkMultiRoomItemStateChanged(evt);
            }
        });
        chkMultiRoom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkMultiRoomStateChanged(evt);
            }
        });
        chkMultiRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkMultiRoomMouseClicked(evt);
            }
        });
        chkMultiRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMultiRoomActionPerformed(evt);
            }
        });
        jPanel3.add(chkMultiRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtStartPoint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtStartPoint.setEnabled(false);
        txtStartPoint.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtStartPointPropertyChange(evt);
            }
        });
        txtStartPoint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStartPointKeyTyped(evt);
            }
        });
        jPanel4.add(txtStartPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 70, 30));

        lblDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDescription.setText("Từ Phòng P$                      cho đến P$");
        jPanel4.add(lblDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 10, 250, -1));

        txtEndPoint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEndPoint.setEnabled(false);
        txtEndPoint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEndPointKeyTyped(evt);
            }
        });
        jPanel4.add(txtEndPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 70, 30));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 350, 30));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setText("<<Quay Lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnThemTang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThemTang.setText("+ Thêm Tầng Mới");
        btnThemTang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTangActionPerformed(evt);
            }
        });

        btnCapnhat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCapnhat.setText("Cập nhật");
        btnCapnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapnhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(btnThemTang))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(110, 110, 110)
                            .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThemTang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 350, 220));

        lblSoHieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSoHieu.setText("P$");
        jPanel3.add(lblSoHieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 30, 30));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 30, 370, 520);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/team3/Images/icons/close2.png")));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/team3/Images/icons/close.png")));
    }//GEN-LAST:event_lblCloseMouseExited

    private void lblCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMousePressed
        this.goBack();
    }//GEN-LAST:event_lblCloseMousePressed

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - yy);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void chkMultiRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMultiRoomActionPerformed
        if (chkMultiRoom.isSelected()) {
            txtStartPoint.setEnabled(true);
            txtEndPoint.setEnabled(true);
            txtTenPhong.setText(null);
            txtTenPhong.setEnabled(false);
            txtTenPhong.setBackground(Color.LIGHT_GRAY);
            txtStartPoint.setBackground(Color.white);
            txtEndPoint.setBackground(Color.white);
        } else {
            txtStartPoint.setEnabled(false);
            txtEndPoint.setEnabled(false);
            txtTenPhong.setEnabled(true);
            txtTenPhong.setBackground(Color.white);
            txtStartPoint.setBackground(Color.LIGHT_GRAY);
            txtEndPoint.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_chkMultiRoomActionPerformed

    private void chkMultiRoomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkMultiRoomItemStateChanged
        
    }//GEN-LAST:event_chkMultiRoomItemStateChanged

    private void chkMultiRoomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkMultiRoomStateChanged
        
    }//GEN-LAST:event_chkMultiRoomStateChanged

    private void chkMultiRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkMultiRoomMouseClicked
        
    }//GEN-LAST:event_chkMultiRoomMouseClicked

    private void cboTangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTangMouseClicked
        
    }//GEN-LAST:event_cboTangMouseClicked

    private void cboTangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTangActionPerformed
        
    }//GEN-LAST:event_cboTangActionPerformed

    private void cboTangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTangItemStateChanged
        
    }//GEN-LAST:event_cboTangItemStateChanged

    private void cboTangPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboTangPropertyChange
        if(cboTang.getSelectedItem().toString()!=null){
        lblDescription.setText("Từ Phòng P"+cboTang.getSelectedItem().toString()+"                      cho đến P"+cboTang.getSelectedItem().toString());
        lblSoHieu.setText("P"+cboTang.getSelectedItem().toString());
        } else{
            lblDescription.setText("Từ Phòng P$                      cho đến P$");
            lblSoHieu.setText("P$");
        }
    }//GEN-LAST:event_cboTangPropertyChange

    private void btnThemTangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTangActionPerformed
        this.addTang();
    }//GEN-LAST:event_btnThemTangActionPerformed

    private void btnCapnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapnhatActionPerformed
        this.addPhong();
    }//GEN-LAST:event_btnCapnhatActionPerformed

    private void txtStartPointKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStartPointKeyTyped

    }//GEN-LAST:event_txtStartPointKeyTyped

    private void txtStartPointPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtStartPointPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartPointPropertyChange

    private void txtEndPointKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEndPointKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndPointKeyTyped

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        this.goBack();
    }//GEN-LAST:event_lblCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {              
                ThemPhong dialog = new ThemPhong(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnThemTang;
    private javax.swing.JComboBox<String> cboLoaiPhong;
    private javax.swing.JComboBox<String> cboTang;
    private javax.swing.JCheckBox chkMultiRoom;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblIconApp;
    private javax.swing.JLabel lblIconApp1;
    private javax.swing.JLabel lblSoHieu;
    public static javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtEndPoint;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtStartPoint;
    private javax.swing.JTextField txtTenPhong;
    // End of variables declaration//GEN-END:variables
   //Load ComboBox : Tầng
    private void loadTang(){
        DefaultComboBoxModel cboMdl = (DefaultComboBoxModel)this.cboTang.getModel();
        cboMdl.removeAllElements();
        List list = this.pDAO.selectTang();
        for (int i=0;i<list.size();i++) {
                String tang = list.get(i).toString();
                    cboMdl.addElement(tang);     
            }
    }     
//Add Tầng
    private void addTang(){
        DefaultComboBoxModel cboMdl = (DefaultComboBoxModel)this.cboTang.getModel();
        int last = Integer.valueOf(cboMdl.getElementAt(cboTang.getItemCount()-1).toString());
        cboMdl.addElement(last+1);
        btnThemTang.setEnabled(false);
        cboTang.setSelectedIndex(cboTang.getItemCount()-1);
        if(cboTang.getSelectedItem().toString()!=null){
        lblDescription.setText("Từ Phòng P"+cboTang.getSelectedItem().toString()+"                      cho đến P"+cboTang.getSelectedItem().toString());
        lblSoHieu.setText("P"+cboTang.getSelectedItem().toString());
        } else{
            lblDescription.setText("Từ Phòng P$                      cho đến P$");
            lblSoHieu.setText("P$");
        }
    }
//Add phòng
    private void addPhong(){
        String tang = cboTang.getSelectedItem().toString(); 
        if(!chkMultiRoom.isSelected()){
            String PID=null;
                 if(txtTenPhong.getText().length()!=0)
                 {
                 if(Integer.valueOf(txtTenPhong.getText())<10){
                 PID= "P"+tang+"0"+Integer.valueOf(txtTenPhong.getText());
                 }else
                 {PID= "P"+tang+Integer.valueOf(txtTenPhong.getText());}
                 
                 }
            Model_Phong mdlCompare = this.pDAO.findByName(PID);     
            if(txtTenPhong.getText().length()==0||txtTenPhong.getText()==""){
              DialogHelper.alert(this, "Bạn đang bỏ trống số hiệu phòng!");
            } else if(mdlCompare!=null){
              DialogHelper.alert(this, "Phòng này đã có trên hệ thống!");  
            } else if(isNumeric(txtTenPhong.getText())==false){
              DialogHelper.alert(this, "Dữ liệu nhập vào phải là số 01-99!");
            } else if(Integer.valueOf(txtTenPhong.getText())>99){
              DialogHelper.alert(this, "Bạn không thể tạo hơn 99 phòng!");  
            }else{  
            try {
            Model_Phong model = getModelPhong();
            
            model.setTenPhong(PID);
            pDAO.insert(model);         
            DialogHelper.alert(this, "Thêm mới thành công!");
            btnThemTang.setEnabled(true);
            
            this.dispose();
            SoDoPhong.btnShowAll.doClick();
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm mới thất bại!");
            e.printStackTrace();
        }
            }
        } else{
            if(txtStartPoint.getText().length()==0||txtEndPoint.getText().length()==0){
              DialogHelper.alert(this, "Phòng đầu/Phòng cuối đang trống!");
            } else if(txtStartPoint.getText()==""||txtEndPoint.getText()==""){
              DialogHelper.alert(this, "Phòng đầu/Phòng cuối đang trống!");
            } else if(isNumeric(txtStartPoint.getText())==false||isNumeric(txtEndPoint.getText())==false){
              DialogHelper.alert(this, "Dữ liệu nhập vào phải là số 01-99!");    
            } else if(Integer.valueOf(txtStartPoint.getText())>Integer.valueOf(txtEndPoint.getText())){
              DialogHelper.alert(this, "Phòng đầu không được lớn hơn phòng cuối!");
            } else if(Integer.valueOf(txtStartPoint.getText())==00){
              DialogHelper.alert(this, "Phòng bắt đầu phải từ 01!");    
            } else if(Integer.valueOf(txtStartPoint.getText())>99||Integer.valueOf(txtEndPoint.getText())>99){
              DialogHelper.alert(this, "Bạn không thể tạo hơn 99 phòng!");
            } else{
             
             try {
                int start = Integer.valueOf(txtStartPoint.getText());
                int end = Integer.valueOf(txtEndPoint.getText());     
            for(int i=start;i<=end;i++){
                 String PID=null;
                 if(i<10){
                 PID= "P"+tang+"0"+String.valueOf(i);
                 }else{PID= "P"+tang+String.valueOf(i);}
                 Model_Phong model = this.pDAO.findByName(PID);
                 if(model==null){
                     Model_Phong mdl = new Model_Phong();
                     mdl.setTenPhong(PID);
                     List<Model_LoaiPhong> ls = this.lpdao.findExactKeyword(cboLoaiPhong.getSelectedItem().toString());
                     mdl.setMaLoaiPhong(String.valueOf(ls.get(0).getMaLP()));
                     mdl.setGhiChu(txtGhiChu.getText());
                     mdl.setTang(cboTang.getSelectedItem().toString());
                     mdl.setTrangThai(0);
                     pDAO.insert(mdl);
                 }
             }    
            DialogHelper.alert(this, "Thêm mới thành công!");
            btnThemTang.setEnabled(true);
            this.dispose();
            SoDoPhong.btnShowAll.doClick();
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm mới thất bại!");
            e.printStackTrace();
        }
            }    
        }
        
    }
//Load ComboBox : Loại Phòng
    private void loadLoaiPhong(){
        DefaultComboBoxModel cboMdl = (DefaultComboBoxModel)this.cboLoaiPhong.getModel();
        cboMdl.removeAllElements();
        List<Model_LoaiPhong> list = this.lpdao.select();
        for (Model_LoaiPhong mdl:list){
            String loai = mdl.getTenLP();
            cboMdl.addElement(loai);
        }
    }

//    void insert(){
//        Model_Phong model = new Model_Phong();
//        if(!chkMultiRoom.isSelected()){
//            model = getModelPhong();
//            try {
//                    pDAO.insert(model);        
//                    DialogHelper.alert(this, "Thêm mới thành công!");
//                } catch (Exception e) {
//                     DialogHelper.alert(this, "Thêm mới thất bại!");
//                    e.printStackTrace();
//            }
//        }else{
//           String start = extractDigits(txtStartPoint.getText());  
//           String end = extractDigits(txtEndPoint.getText());
//           
//        }    
//        }
   void goBack(){
       if(txtGhiChu.getText().length()>0||txtTenPhong.getText().length()>0){
           if(DialogHelper.confirm(this, "Dữ liệu dang chỉnh sửa, bạn có thực sự muốn thoát?")){
           this.dispose();
           SoDoPhong.btnShowAll.doClick();
           }
       } else{
           
           this.dispose();
           SoDoPhong.btnShowAll.doClick();
       }
   } 
    
   public static String extractDigits(
            final CharSequence input){
    final StringBuilder sb = new StringBuilder(
            input.length());
    for(int i = 0; i < input.length(); i++){
        final char c = input.charAt(i);
        if(c > 47 && c < 58){
            sb.append(c);
        }
    }
    return sb.toString();
}     
static boolean isNumeric(String str) { 
        try {  
            Double.parseDouble(str);  
            return true;
        } catch(NumberFormatException e){  
             return false;  
        }  
}    
    
//    void setModelPhong(Model_Phong model) {
//       txtTenPhong.setText(String.valueOf(model.getTenPhong()));
//       txtMP.setText(String.valueOf(model.getMaPhong()));
//       dccNgayNhan.setDate(model.getNgayNhanPhong());
//       dccNgayTraDK.setDate(model.getNgayTraPhongDuKien());
//       dccNgayTraTT.setDate(model.getNgayTraPhongThucTe());
//       dccNgayLap.setDate(model.getNgayLap());
//       cboTrangthai.setSelectedItem(DateHelper.TrangThaitoString(model.getTrangThai()));
//       
//    }
    
    Model_Phong getModelPhong() {
        Model_Phong model = new Model_Phong();
        model.setTenPhong(txtTenPhong.getText());
        model.setTrangThai(0);
        model.setGhiChu(txtGhiChu.getText());
        List<Model_LoaiPhong> ls = this.lpdao.findExactKeyword(cboLoaiPhong.getSelectedItem().toString());
        model.setMaLoaiPhong(String.valueOf(ls.get(0).getMaLP()));      
        model.setTang(cboTang.getSelectedItem().toString());
        return model;
    }
}
