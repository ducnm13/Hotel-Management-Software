/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.team3.UI.JPanel;

import com.team3.DAO.DAO_MaKhuyenMai;
import com.team3.Helpers.DateHelper;
import com.team3.Helpers.DialogHelper;
import com.team3.Helpers.ShareHelper;
import com.team3.Helpers.StringParseHelper;
import com.team3.Model.Model_MaKhuyenMai;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell Vostro
 */
public class MaKhuyenMai extends javax.swing.JPanel {

    DAO_MaKhuyenMai dao = new DAO_MaKhuyenMai();

    int index = 0;

    /**
     * Creates new form SoDoPhong
     */
    public MaKhuyenMai() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        pnlDSLP = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhuyenMai = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        pnlChiTiet = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        chitiet = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGiaTri = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dccThoiHan = new com.toedter.calendar.JDateChooser();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1250, 670));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1250, 60));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("MÃ KHUYỄN MÃI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(908, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(15, 610));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5);

        pnlDSLP.setBackground(new java.awt.Color(255, 255, 255));
        pnlDSLP.setPreferredSize(new java.awt.Dimension(730, 570));
        pnlDSLP.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblKhuyenMai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã KM", "Giá trị", "Thời hạn", "Trạng thái", "Ngày tạo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhuyenMai.setRowHeight(22);
        tblKhuyenMai.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tblKhuyenMai.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseDragged(evt);
            }
        });
        tblKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhuyenMai);

        pnlDSLP.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("      Danh sách mã khuyến mãi");
        jLabel2.setPreferredSize(new java.awt.Dimension(132, 25));
        pnlDSLP.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(pnlDSLP);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(20, 610));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        pnlChiTiet.setBackground(new java.awt.Color(255, 255, 255));
        pnlChiTiet.setPreferredSize(new java.awt.Dimension(500, 570));
        pnlChiTiet.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("      Chi tiết");
        jLabel3.setPreferredSize(new java.awt.Dimension(42, 25));
        pnlChiTiet.add(jLabel3, java.awt.BorderLayout.PAGE_START);

        chitiet.setBackground(new java.awt.Color(255, 255, 255));
        chitiet.setLayout(new java.awt.GridLayout(3, 0));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridLayout(6, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mã khuyến mãi");
        jPanel3.add(jLabel4);

        txtMaKM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.add(txtMaKM);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Giá trị");
        jPanel3.add(jLabel5);

        txtGiaTri.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel3.add(txtGiaTri);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Thời hạn");
        jPanel3.add(jLabel6);
        jPanel3.add(dccThoiHan);

        chitiet.add(jPanel3);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new java.awt.GridLayout(6, 0));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new java.awt.GridLayout(1, 4));
        jPanel8.add(jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new java.awt.GridLayout(1, 4));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel11.add(btnThem);

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel11.add(btnXoa);

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel11.add(btnSua);

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel11.add(btnLamMoi);

        jPanel8.add(jPanel11);

        chitiet.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.GridLayout(6, 0));
        chitiet.add(jPanel9);

        pnlChiTiet.add(chitiet, java.awt.BorderLayout.CENTER);

        jPanel2.add(pnlChiTiet);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(15, 610));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel6);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void tblKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            index = tblKhuyenMai.rowAtPoint(evt.getPoint());
            edit();
            checkHSD();
        }
    }//GEN-LAST:event_tblKhuyenMaiMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (checkRole()) {
            if (check()) {
                insert();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (checkRole()) {
            if (check()) {
                update();
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (checkRole()) {
            if (checkDelete()) {
                delete();
            }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clear();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tblKhuyenMaiMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseDragged

    }//GEN-LAST:event_tblKhuyenMaiMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JPanel chitiet;
    private com.toedter.calendar.JDateChooser dccThoiHan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlChiTiet;
    private javax.swing.JPanel pnlDSLP;
    private javax.swing.JTable tblKhuyenMai;
    private javax.swing.JTextField txtGiaTri;
    private javax.swing.JTextField txtMaKM;
    // End of variables declaration//GEN-END:variables
    void init() {
        txtMaKM.setText(random().toUpperCase());
        dccThoiHan.setDateFormatString("dd/MM/yyyy");
        dccThoiHan.setDate(new Date());
        checkHSD();
        load();
    }

    void load() {
        DefaultTableModel model = (DefaultTableModel) tblKhuyenMai.getModel();
        model.setRowCount(0);
        try {
            List<Model_MaKhuyenMai> list = dao.select();
            if (list != null || list.size() != 0) {
                for (Model_MaKhuyenMai mkm : list) {
                    Object[] row = new Object[]{
                        mkm.getMaKM(),
                        mkm.getGiaTri(),
                        DateHelper.toString(mkm.getThoiHan(), "dd/MM/yyyy"),
                        StringParseHelper.TrangThaiMKMtoString(mkm.getTrangThai()),
                        DateHelper.toString(DateHelper.now(), "dd/MM/yyyy")
                    };
                    model.addRow(row);
                    checkHSD();
                }
                if (list.size() > 0) {
                    tblKhuyenMai.setRowSelectionInterval(index, index);
                }
                txtMaKM.setEnabled(false);
                setButton(true);
            }
        } catch (Exception e) {

        }

    }

    void setButton(boolean value) {
        btnThem.setEnabled(value);
        btnSua.setEnabled(!value);
        btnXoa.setEnabled(!value);
    }

    void edit() {
        try {
            String makm = (String) tblKhuyenMai.getValueAt(this.index, 0);
            Model_MaKhuyenMai model = dao.findByMa(makm);
            setModel(model);
            setButton(false);
        } catch (Exception e) {

        }
    }

    void delete() {
        try {
            String makm = (String) tblKhuyenMai.getValueAt(this.index, 0);
            dao.delete(makm);
            clear();
            load();
            DialogHelper.alert(this, "Xoá thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Xoá không thành công");
        }
    }

    void update() {
        String makm = (String) tblKhuyenMai.getValueAt(this.index, 0);
        Model_MaKhuyenMai mdl = dao.findByMa(makm);
        if (mdl.getTrangThai() == 0) {
            try {
                Model_MaKhuyenMai model = getModel();
                model.setTrangThai(mdl.getTrangThai());
                dao.update(model);
                clear();
                load();
                DialogHelper.alert(this, "Cập nhật thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Cập nhật không thành công");
                e.printStackTrace();
            }
        } else {
            DialogHelper.alert(this, "Chỉ có thể cập nhật mã chưa sủ dụng!");
        }
    }

    void insert() {
        try {
            Model_MaKhuyenMai model = getModel();
            model.setTrangThai(0);
            dao.insert(model);
            clear();
            load();
            DialogHelper.alert(this, "Thêm thành công");
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm không thành công");
            e.printStackTrace();
        }
    }

    void clear() {
        txtMaKM.setText(random().toUpperCase());
        txtGiaTri.setText("");
        dccThoiHan.setDate(DateHelper.now());
        txtGiaTri.requestFocus();
        index = 0;
        load();
    }

    Model_MaKhuyenMai getModel() {
        Model_MaKhuyenMai model = new Model_MaKhuyenMai();
        model.setMaKM(txtMaKM.getText());
        String[] giatri = txtGiaTri.getText().split("\\.", 1);
        model.setGiaTri(Double.parseDouble(giatri[0]));
        model.setThoiHan(dccThoiHan.getDate());
        model.setNgayTao(DateHelper.now());
//        model.setTrangThai((int) tblKhuyenMai.getValueAt(this.index, 3));
        return model;
    }

    void setModel(Model_MaKhuyenMai model) {
        txtMaKM.setText(model.getMaKM());
        DecimalFormat df = new DecimalFormat("0.##");
        txtGiaTri.setText(String.valueOf(df.format(model.getGiaTri())));
        dccThoiHan.setDate(model.getThoiHan());

    }

    void checkHSD() {
        try {
            List<Model_MaKhuyenMai> list = dao.select();
            for (Model_MaKhuyenMai mkm : list) {
                if (DateHelper.now().after(mkm.getThoiHan())) {
                    mkm.setTrangThai(2);
                    this.dao.update(mkm);
                }
            }
//            load();
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

//    boolean checkGia() {
//        String dongia = "[0-9]{1,3}";
//        int giatrinhap = Integer.parseInt(txtGiaTri.getText().trim());
//        int giatri = 100;
//        if (txtGiaTri.getText().trim().matches(dongia) && giatrinhap <= giatri) {
//            return true;
//        } else {
//            DialogHelper.alert(this, "Giá chỉ được nhập số và không hơn 100%");
//            txtGiaTri.requestFocus();
//            return false;
//        }
//    }
    boolean checkGia() {
        String dongia = "[0-9]{1,3}";
        if (txtGiaTri.getText().trim().matches(dongia)) {
            return true;
        } else {
            DialogHelper.alert(this, "Giá chỉ được nhập số và không hơn 100%");
            txtGiaTri.requestFocus();
            return false;
        }
    }

    boolean checkDate() {
        if (dccThoiHan.getDate().after(DateHelper.now())) {
            return true;
        } else {
            DialogHelper.alert(this, "Thời hạn phải lớn hơn hiện tại");
            dccThoiHan.requestFocus();
            return false;
        }
    }

    boolean check() {
        if (checkLength() && checkGia() && checkDate()) {
            return true;
        } else {
            return false;
        }
    }

    boolean checkLength() {
        if (txtGiaTri.getText().trim().length() > 0) {
            return true;
        } else {
            txtGiaTri.requestFocus();
            DialogHelper.alert(this, "Thông tin không được để trống");
            return false;
        }
    }

    static String random() {
        char[] chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();
        StringBuilder sb = new StringBuilder(6);
        Random random = new Random();
        for (int i = 0; i < 6; i++) {
            char c = chars[random.nextInt(chars.length)];
            sb.append(c);
        }
        String output = sb.toString();
        return output;
    }

    boolean checkDelete() {
        String makm = (String) tblKhuyenMai.getValueAt(this.index, 0);
        Model_MaKhuyenMai model = dao.findByMa(makm);
        if (model.getTrangThai() == 2) {
            return true;
        } else {
            DialogHelper.alert(this, "Bạn chỉ có thể xóa mã hết hạn");
            return false;
        }
    }

    boolean checkRole() {
        if (ShareHelper.role == 2) {
            return true;
        } else {
            DialogHelper.alert(this, "Chỉ có quản lý mới được thao tác");
            return false;
        }
    }
}
